package NGO2024;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import oru.inf.InfDB;
import oru.inf.InfException;


/**
 *
 * @author meldi
 */
public class Inloggning extends javax.swing.JFrame {

    private InfDB idb;
    /**
     * Creates new form Inloggning
     */
    public Inloggning(InfDB idb) {
        this.idb = idb;
        initComponents();
        lblfelMeddelande.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblEpost = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        txtEpost = new javax.swing.JTextField();
        lblfelMeddelande = new javax.swing.JLabel();
        btnLoggaIn = new javax.swing.JButton();
        jpswrdPassword = new javax.swing.JPasswordField();
        chcShowPassword = new javax.swing.JCheckBox();
        chcSaveLogin = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblEpost.setText("E-post");

        lblPassword.setText("Lösenord");

        lblfelMeddelande.setForeground(new java.awt.Color(204, 0, 0));
        lblfelMeddelande.setText("Felaktig epost eller lösenord");

        btnLoggaIn.setText("Logga in");
        btnLoggaIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoggaInActionPerformed(evt);
            }
        });

        chcShowPassword.setText("Show Password");
        chcShowPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chcShowPasswordActionPerformed(evt);
            }
        });

        chcSaveLogin.setText("Save Login");
        chcSaveLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chcSaveLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblfelMeddelande, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 70, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblEpost, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnLoggaIn)
                                .addGap(110, 110, 110))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(chcSaveLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(chcShowPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                                    .addComponent(txtEpost, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jpswrdPassword, javax.swing.GroupLayout.Alignment.LEADING))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEpost)
                    .addComponent(txtEpost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPassword)
                    .addComponent(jpswrdPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(chcShowPassword)
                .addGap(1, 1, 1)
                .addComponent(chcSaveLogin)
                .addGap(21, 21, 21)
                .addComponent(lblfelMeddelande)
                .addGap(18, 18, 18)
                .addComponent(btnLoggaIn)
                .addGap(75, 75, 75))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoggaInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoggaInActionPerformed
        String ePost = txtEpost.getText();
        char[] lösen = jpswrdPassword.getPassword(); 
        
        try {
            String sqlFraga = "SELECT losenord FROM anstalld WHERE epost = '" + ePost + "'";
            //System.out.println(sqlFraga);
            String dbLösen = idb.fetchSingle(sqlFraga);
            //kollar om lösenordet stämmer överens med lösenordet som ligger lagrat i databasen
            if (String.valueOf(lösen).equals(dbLösen)){
                //kollar om användaren är admin utifrån deras epost
                Boolean ärAdmin = checkAdmin(ePost);
                //kollar om användaren är projektledare utifrånd eras epost
                Boolean ärProjektLedare = checkProjektLedare(ePost);
                //om de är admin kommer en meny öppnas
                if (ärAdmin == true){
                    new MenyAdmin(idb, ePost).setVisible(true);
                this.setVisible(false);
                }
                //om de är projektledare kommer en meny öppnas
                else if (ärProjektLedare == true){
                    System.out.println("hej");
                }
    
            }
            //skrivs ut om lösenordet är fel 
            else {
                lblfelMeddelande.setVisible(true);
            }
        }
        catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_btnLoggaInActionPerformed

    private Boolean checkAdmin (String ePost)
    {
        Boolean adminHittad = false; 
        
        try { 
            String sqlFrågaAdmin = "select aid from admin where aid in (select aid from anstalld where epost = '" + ePost + "')";
            String anställningsIDS = idb.fetchSingle(sqlFrågaAdmin);
            
        if (anställningsIDS != null)
        {
           int anställningsIDInt = Integer.parseInt(anställningsIDS);
            adminHittad = true;
        }
        
        }
        
        catch(NumberFormatException | InfException ex){
            ex.printStackTrace();
            
        }
        return adminHittad; 
    }
    
    private Boolean checkProjektLedare (String ePost)
    {
        Boolean projektLedareHittad = false; 
        
        try { 
            String sqlFrågaProjekt = "select projektchef from projekt where projektchef in (select aid from anstalld where epost = '" + ePost + "')";
            String anställningsIDString = idb.fetchSingle(sqlFrågaProjekt);
            
        if (anställningsIDString != null)
        {
           int anställningsIDInt = Integer.parseInt(anställningsIDString);
            projektLedareHittad = true;
        }
        
        }
        
        catch(NumberFormatException | InfException ex){
            ex.printStackTrace();
            
        }
        return projektLedareHittad; 
    }
    
    private void chcShowPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chcShowPasswordActionPerformed
        if (chcShowPassword.isSelected()){
            jpswrdPassword.setEchoChar((char)0);
        }
        else {
            jpswrdPassword.setEchoChar('*');
        }
       
    }//GEN-LAST:event_chcShowPasswordActionPerformed

    private void chcSaveLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chcSaveLoginActionPerformed
        //String ePost = txtEpost.getText();
        //char[] lösen = jpswrdPassword.getPassword();
        
       
       
    }//GEN-LAST:event_chcSaveLoginActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inloggning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inloggning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inloggning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inloggning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new Inloggning().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLoggaIn;
    private javax.swing.JCheckBox chcSaveLogin;
    private javax.swing.JCheckBox chcShowPassword;
    private javax.swing.JPasswordField jpswrdPassword;
    private javax.swing.JLabel lblEpost;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblfelMeddelande;
    private javax.swing.JTextField txtEpost;
    // End of variables declaration//GEN-END:variables
}
